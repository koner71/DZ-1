# 1
# Создать программный файл в текстовом формате, записать в него построчно данные,
# вводимые пользователем. Об окончании ввода данных будет свидетельствовать пустая
# строка

with open("data.txt", "w") as file:
    # Цикл ввода данных, пока пользователь не введет пустую строку
    while True:
        # Получаем строку от пользователя
        input_str = input("Введите строку (пустая строка для окончания ввода): ")
        # Если строка не пустая, записываем ее в файл
        if input_str != "":
            file.write(input_str + "\n")
        # Если строка пустая, завершаем цикл ввода данных
        else:
            break

# 2
# Создать текстовый файл (не программно), сохранить в нём несколько строк, выполнить
# подсчёт строк и слов в каждой строке.

# with open('data.txt', 'r') as file:
#     content = file.readline()
#     # Цикл перебора строк и подсчета слов в каждой строке
#     for i, line in enumerate(content):
#         # Удаляем символ переноса строки из конца строки
#         line = line.strip()
#         # Разбиваем строку на слова
#         words = line.split()
#         print(f'Строка {i+1} содержит {len(words)} слов')
# 3
# Создать текстовый файл (не программно). Построчно записать фамилии сотрудников и
# величину их окладов (не менее 10 строк). Определить, кто из сотрудников имеет оклад менее
# 20 тысяч, вывести фамилии этих сотрудников. Выполнить подсчёт средней величины дохода
# сотрудников.
# Пример файла:
# Иванов 23543.12
# Петров 13749.32


#Открываем файл на чтение
with open("data.txt", "r", encoding='utf-8') as file:
    # Считываем все строки файла в список
    lines = file.readlines()

    # Создаем пустой список для хранения фамилий сотрудников с окладом менее 20 тысяч
    low_salary_employees = []

    # Общее количество сотрудников и общая сумма дохода
    num_employees = 0
    total_income = 0.0

    # Цикл перебора строк
    for line in lines:
        # Разбиваем строку на фамилию и оклад
        parts = line.split()

        # Извлекаем фамилию и оклад из списка parts
        name = parts[0]
        salary = float(parts[1])

        # Проверяем, имеет ли сотрудник оклад менее 20 тысяч
        if salary < 20000:
            low_salary_employees.append(name)

        # Увеличиваем общее количество сотрудников и общую сумму дохода
        num_employees += 1
        total_income += salary

    # Вычисляем среднюю величину дохода
    average_income = total_income / num_employees

    # Выводим результаты
    print("Сотрудники с окладом менее 20 тысяч:")
    for name in low_salary_employees:
        print(name)
    print(f"Средняя величина дохода сотрудников: {average_income:.2f}")

# 4
# Создать (не программно) текстовый файл со следующим содержимым:
# One — 1
# Two — 2
# Three — 3
# Four — 4
# Напишите программу, открывающую файл на чтение и считывающую построчно данные. При
# этом английские числительные должны заменяться на русские. Новый блок строк должен
# записываться в новый текстовый файл.

with open('four.txt', 'r') as file:
    line = file.read()
line = line.replace('One', 'один')
line = line.replace('Two', 'два')
line = line.replace('Three', 'три')
line = line.replace('Four', 'четыре')
with open('four2.txt', 'w') as file:
    file.write(line)

# 5
# Создать (программно) текстовый файл, записать в него программно набор чисел, разделённых
# пробелами. Программа должна подсчитывать сумму чисел в файле и выводить её на экран.

with open('fife.txt', 'w') as file:
    for i in range(1, 6):
        file.write(str(i) + '\n')
with open('fife.txt', 'r') as file:
    line = file.read().splitlines()
    line = [int(i) for i in line]
summa = sum(line)
print(f'сумма - {summa}')


#6
# Сформировать (не программно) текстовый файл. В нём каждая строка должна описывать
# учебный предмет и наличие лекционных, практических и лабораторных занятий по предмету.
# Сюда должно входить и количество занятий. Необязательно, чтобы для каждого предмета
# были все типы занятий.
# Сформировать словарь, содержащий название предмета и общее количество занятий по
# нему. Вывести его на экран.
# Примеры строк файла: Информатика: 100(л) 50(пр) 20(лаб).
# Физика: 30(л) — 10(лаб)
# Физкультура: — 30(пр) —
# Пример словаря: {“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}

# открываем файл и считываем строки
with open("filename.txt", "r") as file:
    lines = file.readlines()

# создаем пустой словарь, в который будем сохранять информацию о каждом предмете
subjects = {}

# перебираем строки в файле
for line in lines:
    # разбиваем строку на отдельные слова, разделенные пробелами
    words = line.split()

    # первое слово в строке является названием предмета
    subject = words[0].rstrip(':')

    # создаем пустой список для хранения количества занятий по каждому типу занятий
    lesson_counts = [0, 0, 0]

    # перебираем оставшиеся слова в строке
    for i in range(1, len(words)):
        # если слово содержит количество занятий для лекций, то сохраняем это число в первый элемент списка lesson_counts
        if '(л)' in words[i]:
            lesson_counts[0] = int(words[i].rstrip('(л)'))
        # если слово содержит количество занятий для практических занятий, то сохраняем это число во второй элемент списка lesson_counts
        elif '(пр)' in words[i]:
            lesson_counts[1] = int(words[i].rstrip('(пр)'))
        # если слово содержит количество занятий для лабораторных занятий, то сохраняем это число в третий элемент списка lesson_counts
        elif '(лаб)' in words[i]:
            lesson_counts[2] = int(words[i].rstrip('(лаб)'))

    # вычисляем общее количество занятий по предмету, складывая количество занятий по каждому типу занятий
    total_lessons = sum(lesson_counts)

    # сохраняем информацию о предмете и общем количестве занятий в словаре
    subjects[subject] = total_lessons

# выводим словарь на экран
print(subjects)

#7
# Создать вручную и заполнить несколькими строками текстовый файл, в котором каждая
# строка будет содержать данные о фирме: название, форма собственности, выручка, издержки.
# Пример строки файла: firm_1 ООО 10000 5000.
# Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также
# среднюю прибыль. Если фирма получила убытки, в расчёт средней прибыли её не включать.
# Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а
# также словарь со средней прибылью. Если фирма получила убытки, также добавить её в
# словарь (со значением убытков).
# Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
# Итоговый список сохранить в виде json-объекта в соответствующий файл.
# Пример json-объекта:
# [{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
# Подсказка: использовать менеджер контекста.

import json

with open("companies.txt", "r") as file:
    companies = {}
    total_profit = 0
    count = 0
    for line in file:
        data = line.strip().split()
        name, ownership, revenue, costs = data
        profit = int(revenue) - int(costs)
        companies[name] = profit
        if profit > 0:
            total_profit += profit
            count += 1
    if count > 0:
        average_profit = total_profit / count
    else:
        average_profit = 0
    result = [companies, {"average_profit": average_profit}]
    with open("result.json", "w") as output_file:
        json.dump(result, output_file)
